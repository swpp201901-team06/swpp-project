// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MainPage component test matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MainPage />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <styled.div>
        <img
                src={
                        Object {
                                "default": "file",
                              }
                }
                style={
                        Object {
                                "height": 200,
                                "margin": 100,
                                "width": 500,
                              }
                }
        />
        <Connect(Main)
                style={
                        Object {
                                "height": "30%",
                                "width": "30%",
                              }
                }
        />
</styled.div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <img
            src={
                        Object {
                                    "default": "file",
                                  }
            }
            style={
                        Object {
                                    "height": 200,
                                    "margin": 100,
                                    "width": 500,
                                  }
            }
/>,
          <Connect(Main)
            style={
                        Object {
                                    "height": "30%",
                                    "width": "30%",
                                  }
            }
/>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "src": Object {
              "default": "file",
            },
            "style": Object {
              "height": 200,
              "margin": 100,
              "width": 500,
            },
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "style": Object {
              "height": "30%",
              "width": "30%",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <styled.div>
          <img
                    src={
                              Object {
                                        "default": "file",
                                      }
                    }
                    style={
                              Object {
                                        "height": 200,
                                        "margin": 100,
                                        "width": 500,
                                      }
                    }
          />
          <Connect(Main)
                    style={
                              Object {
                                        "height": "30%",
                                        "width": "30%",
                                      }
                    }
          />
</styled.div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <img
              src={
                            Object {
                                          "default": "file",
                                        }
              }
              style={
                            Object {
                                          "height": 200,
                                          "margin": 100,
                                          "width": 500,
                                        }
              }
/>,
            <Connect(Main)
              style={
                            Object {
                                          "height": "30%",
                                          "width": "30%",
                                        }
              }
/>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "src": Object {
                "default": "file",
              },
              "style": Object {
                "height": 200,
                "margin": 100,
                "width": 500,
              },
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "style": Object {
                "height": "30%",
                "width": "30%",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "prevContext": true,
          },
          "getChildContext": Object {
            "calledByRenderer": true,
          },
        },
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
